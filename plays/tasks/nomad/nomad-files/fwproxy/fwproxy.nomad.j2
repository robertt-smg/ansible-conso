########################################################################
# File managed by ansible
# Your changes will be overwritten.
########################################################################
#
# For more information on the "job" stanza, please see
# the online documentation at:
#
#     https://www.nomadproject.io/docs/job-specification/job.html
#

job "{{ job_name }}" {
  datacenters = [ "{{ datacenter }}" ]
  type = "service"
  constraint {
    attribute = "${attr.kernel.name}"
    value     = "linux"
  }
  update {
    max_parallel = 1
    min_healthy_time = "10s"
    healthy_deadline = "30m"
    progress_deadline = "32m"
    auto_revert = false
    canary = 0
  }

  group "{{ job_name }}" {
    count = 1
    network {
      
      port "http_port" { 
        static = {{ fwproxy.external_port }} 
        to = 3443 
      }
 
      mode = "host"
    }
    restart {
      attempts = 10
      interval = "5m"
      delay = "25s"
      mode = "delay"
    }
    
    task "fwproxy-server" {
      {% if nomad_config_driver_is_docker is defined and nomad_config_driver_is_docker %}
      driver = "docker"
      {% else %}
      driver = "podman"
      {% endif %}
      env = {
          "USER_UID" = "1000"
          "EXTERNAL_API_BASE" = "https://aerpackit.flightconex.de"
          "PORT" = "3443"
          "CERT_FILE" = "server.pem"
          "KEY_FILE" = "server.key.secret"
          "CORS_ALLOWED_ORIGIN" = "*"
          "DB_TYPE" = "mysql"
          "DB_NAME" = "proxy.db"
          "MYSQL_DSN" = "{{ fwproxy.db.user}}:{{ fwproxy.db.password}}@tcp({{ fwproxy.db.host }}:3306)/{{ fwproxy.db.name }}"
          BASE_DIR = "/root/"
      }
      config {
        {% if nomad_config_driver_is_docker is defined and nomad_config_driver_is_docker %}
          memory_hard_limit = {{ fwproxy.memory_hard_limit }}
        {% endif %}
        {% set image_version= fwproxy.image_version %}
        {% include "nomad-files/github_registry.j2" %}

        labels {
          group = "fwproxy"
        }

        volumes = [
            "{{ fwproxy.app_volume }}/data:/data"
        ]
        {% if nomad_config_driver_is_docker is defined and nomad_config_driver_is_docker %}
        volume_driver = "local"
        {% endif %}
         
        ports = [ "http_port" ]
        
        extra_hosts = [
          "fwproxy_db_server:{{ fwproxy.db.host}}",
        ]
       
      }
      
      service {
        name = "{{ job_name }}"
        port = "http_port"
        provider = "nomad"
         check {
          type     = "http"
          port     = "http_port"
          path     = "/ftifw/ok.txt"  
          interval = "240s"
          timeout  = "30s"
          method   = "GET"
          protocol = "https"
          tls_skip_verify = true
          
        }
      }
      logs {
         max_files     = 2
         max_file_size = 15
      }
 
      resources {
        cpu = {{ fwproxy.cpu }}
        memory = {{ fwproxy.memory }}
      }
    }
  }
}