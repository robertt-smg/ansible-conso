
global
    ulimit-n 1048576
    tune.ssl.default-dh-param 2048
    log 127.0.0.1 local0 debug

    stats socket ipv4@*:9999 mode 660 level admin expose-fd listeners
    nbthread 8
    
defaults
    log global
    # option httplog
    log-format "%{+Q}o %{-Q}ci - - [%trg] %r %ST %B \"\" \"\" %cp %ms %ft %b %s %TR %Tw %Tc %Tr %Ta %tsc %ac %fc %bc %sc %rc %sq %bq %CC %CS %hrl %hsl"

    balance roundrobin

    # option  dontlognull
    option dontlog-normal
    option redispatch
    option logasap

    maxconn {{ maxconn }}

    timeout connect 60s
    timeout client  120s
    timeout server  120s
    timeout queue   120s
    timeout http-request 15s
    timeout http-keep-alive 15s

listen stats 
    bind :8690
    mode http
    stats enable
    stats hide-version
    stats uri /

frontend ft_http_api
        bind :8080
        bind :443 ssl crt /data/certs/live/server.pem  verify none

        http-request set-src hdr(x-forwarded-for)
        http-request track-sc0 src table per_ip_rates
        http-request capture req.hdrs len 4000
        http-request set-var(txn.myhdr) capture.req.hdr(0)
        http-request capture req.hdr(Host) len 10
        http-request capture req.hdr(User-Agent) len 100

        # Find right backend

        acl ip path_beg -i /ip/
        acl ip path_end -i ip
        acl ip path_end -i ip/
        
        # acl passbolt path_sub passbolt

        acl is_crm_test hdr(host) -i airna.test.smg-air-conso.com
        acl is_crm hdr(host) -i airna.smg-air-conso.com
        use_backend suitecrm if is_crm_test or is_crm

        acl is_neocore_test hdr(host) -i neocore.test.smg-air-conso.com
        acl is_neocore hdr(host) -i neocore.smg-air-conso.com
        use_backend neocore if is_neocore_test or is_neocore

        mode http

        # use_backend passbolt if passbolt
        default_backend welcome

backend welcome
    mode http
    timeout tarpit 10s
    http-request tarpit deny_status 429 if { sc_http_req_rate(1) gt 5 }

    log 127.0.0.1 local0 notice
    errorfile 503 /usr/local/etc/haproxy/200welcome.http
    
    http-request set-log-level silent
    # ignore 'backend welcome has no server available!' , serve static page

backend per_ip_rates
    stick-table type ip size 1m expire 10m store http_req_rate(10s) 

#backend passbolt
#    mode http

#    timeout server  120s
#    http-response set-header Content-Security-Policy frame-ancestors\ %[var(txn.allowed_origins)];
#    http-request set-header Access-Control-Allow-Private-Network true if { req.hdr(X-Access-Control-Allow-Private-Network) -m int 1 }
#    server passbolt {-{public_ip}-}:2443 id 2443 check ssl verify none check port 2443

backend suitecrm
    mode http
    balance roundrobin
    server suitecrm_server  {{suitecrm.public_ip}}:{{ suitecrm.external_port }} check 

backend neocore
    mode http
    balance roundrobin
    server neocore_server  {{neocore.public_ip}}:{{ neocore.external_port }} check

#eof - haproxy need empty LF
