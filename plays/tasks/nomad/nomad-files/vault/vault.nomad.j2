########################################################################
# File managed by ansible
# Your changes will be overwritten.
########################################################################
#
# For more information on the "job" stanza, please see
# the online documentation at:
#
#     https://www.nomadproject.io/docs/job-specification/job.html
#

job "{{ job_name }}" {
  datacenters = [ "{{ datacenter }}" ]
  type = "service"
  constraint {
    attribute = "${attr.kernel.name}"
    value     = "linux"
  }
  update {
    max_parallel = 1
    min_healthy_time = "10s"
    healthy_deadline = "30m"
    progress_deadline = "32m"
    auto_revert = false
    canary = 0
  }

  group "{{ job_name }}" {
    count = 1
    network {
      
      port "http_ui_port" { 
        static = {{ vault.external_ui_port }} 
        to = 8220
      }
 
      mode = "host"
    }
    restart {
      attempts = 10
      interval = "5m"
      delay = "25s"
      mode = "delay"
    }
    
    task "vault-server" {
      {% if nomad_config_driver_is_docker is defined and nomad_config_driver_is_docker %}
      driver = "docker"
      {% else %}
      driver = "podman"
      {% endif %}

      env {
        VAULT_ADDR = "http://127.0.0.1:8220"
        VAULT_API_ADDR = "http://localhost:8200"
      }
      config {
        {% if nomad_config_driver_is_docker is defined and nomad_config_driver_is_docker %}
          memory_hard_limit = {{ vault.memory_hard_limit }}
        {% endif %}
        {% set image_version= vault.image_version %}
        {% include "nomad-files/github_registry.j2" %}

        labels {
          group = "vault"
        }
        cap_add = [
          "IPC_LOCK"
        ]
        command = "vault"
        args = ["server", "-config=/vault/config/config.hcl"]
        volumes = [
            "{{ vault.app_volume }}/data/logs:/vault/logs",
            "{{ vault.app_volume }}/data/certs:/data/certs",
            "{{ vault.app_volume }}/data/config:/vault/config",
        ]
        {% if nomad_config_driver_is_docker is defined and nomad_config_driver_is_docker %}
        volume_driver = "local"
        {% endif %}
         
        ports = [ "http_ui_port" ]
        
      }
      service {
        name = "{{ job_name }}"
        port = "http_ui_port"
        provider = "nomad"
         check {
          type     = "http"
          port     = "http_ui_port"
          path     = "/ui/"  
          interval = "120s"
          timeout  = "30s"
          method   = "GET"
          protocol = "https"
          tls_skip_verify = true          
        }
      }
      

      logs {
         max_files     = 2
         max_file_size = 15
      }
 
      resources {
        cpu = {{ vault.cpu }}
        memory = {{ vault.memory }}
      }
    }
  }
}