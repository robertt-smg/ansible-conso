- name: Ensure batch directory exists
  ansible.windows.win_file:
    path: "c:\\batch"
    state: directory

- name: Set batch directory permissions
  ansible.windows.win_acl:
    path: "c:\\batch"
    user: Administrators
    rights: FullControl
    type: allow
    inherit: ContainerInherit,ObjectInherit
    propagation: None

- name: "Create batch file for network drive mapping PRD"
  ansible.windows.win_copy:
    dest: "c:\\batch\\q.cmd"
    content: |
      @echo off
      echo Checking existing drive mappings...
      net use {{ airquest_fileserver.drive_letter }}: /delete /y 2>nul
      echo Mapping network drive...
      net use {{ airquest_fileserver.drive_letter }}: \\{{ airquest_fileserver.host_name_q }}\{{ airquest_fileserver.share }} /user:{{ airquest_fileserver.user }} {{ airquest_fileserver.password }} /WRITETHROUGH

- name: "Create batch file for network drive mapping DEV"
  ansible.windows.win_copy:
    dest: "c:\\batch\\s.cmd"
    content: |
      @echo off
      echo Checking existing drive mappings...
      net use {{ airquest_fileserver.drive_letter_dev }}: /delete /y 2>nul
      echo Mapping network drive...
      net use {{ airquest_fileserver.drive_letter_dev }}: \\{{ airquest_fileserver.host_name_q_dev }}\{{ airquest_fileserver.share_dev }} /user:{{ airquest_fileserver.user }} {{ airquest_fileserver.password }} /WRITETHROUGH

- name: Set batch file permissions
  ansible.windows.win_acl:
    path: "c:\\batch\\q.cmd"
    user: Administrators
    rights: FullControl
    type: allow
    inherit: None
    propagation: None
  
- name: Set registry keys for airQuest
  win_dsc:
        resource_name: "Registry"
        Ensure: Present
        key: "{{ item.key }}"
        ValueName: "{{ item.vname }}"
        ValueType: "{{ item.vtype }}" 
        ValueData: "{{ item.vdata }}" 
  with_items: "{{ airquest_fileserver.registry_present }}"

- name: Delete registry keys for airQuest
  win_dsc:
        resource_name: "Registry"
        Force: true
        Ensure: Absent
        key: "{{ item.key }}"
        ValueName: "{{ item.vname }}"
  with_items: "{{ airquest_fileserver.registry_absent }}"

- name: Create Logon Script Directory
  win_file:
    path: "{{ ansible_facts.env.SystemRoot }}\\System32\\GroupPolicy\\User\\Scripts\\Logon"
    state: directory
    owner: S-1-1-0 # Everyone
    recurse: yes
  when: airquest_defaults.automount is defined and airquest_defaults.automount

- name: Create Logon Script
  win_copy:
    dest: "{{ ansible_facts.env.SystemRoot }}\\System32\\GroupPolicy\\User\\Scripts\\Logon\\mount_airquest.cmd"
    content: |
      net use {{ airquest_fileserver.drive_letter }}: \\\\{{ airquest_fileserver.host }}\\{{ airquest_fileserver.share }} /user:{{ airquest_fileserver.user }}@{{ airquest_fileserver.host }} {{ airquest_fileserver.password }} /WRITETHROUGH
  when: airquest_defaults.automount is defined and airquest_defaults.automount

- name: Disable oplocks client
  win_command: >
    powershell.exe -ExecutionPolicy ByPass -Command "Set-SmbClientConfiguration -oplocksdisabled $true -Force"
  args:
    chdir: C:\

- name: Set SMB Client Configuration
  win_command: >
    powershell.exe -ExecutionPolicy ByPass -Command "Set-SmbClientConfiguration -useopportunisticlocking $false -Force"
  args:
    chdir: C:\

- name: Set Directory Cache Lifetime
  win_command: >
    powershell.exe -ExecutionPolicy ByPass -Command "Set-SmbClientConfiguration -DirectoryCacheLifetime 0 -Force"
  args:
    chdir: C:\

- name: Set File Info Cache Lifetime
  win_command: >
    powershell.exe -ExecutionPolicy ByPass -Command "Set-SmbClientConfiguration -FileInfoCacheLifetime 0 -Force"
  args:
    chdir: C:\

- name: Set File Not Found Cache Lifetime
  win_command: >
    powershell.exe -ExecutionPolicy ByPass -Command "Set-SmbClientConfiguration -FileNotFoundCacheLifetime 0 -Force"
  args:
    chdir: C:\

- name: Set Session Timeout
  win_command: >
    powershell.exe -ExecutionPolicy ByPass -Command "Set-SmbClientConfiguration -SessionTimeout 120 -Force"
  args:
    chdir: C:\

# SMB Server Configuration
- name: Set SMB Server - Disable Authenticate User Sharing
  win_command: >
    powershell.exe -ExecutionPolicy ByPass -Command "Set-SmbServerConfiguration -EnableAuthenticateUserSharing $false -Force"
  args:
    chdir: C:\

- name: Set SMB Server - Cached Open Limit
  win_command: >
    powershell.exe -ExecutionPolicy ByPass -Command "Set-SmbServerConfiguration -CachedOpenLimit 0 -Force"
  args:
    chdir: C:\

- name: Set SMB Server - Enable SMB2 Protocol
  win_command: >
    powershell.exe -ExecutionPolicy ByPass -Command "Set-SmbServerConfiguration -EnableSMB2Protocol $true -Force"
  args:
    chdir: C:\

- name: Set SMB Server - Treat Host As Stable Storage
  win_command: >
    powershell.exe -ExecutionPolicy ByPass -Command "Set-SmbServerConfiguration -TreatHostAsStableStorage $true -Force"
  args:
    chdir: C:\

- name: Set SMB Server - Max Threads Per Queue
  win_command: >
    powershell.exe -ExecutionPolicy ByPass -Command "Set-SmbServerConfiguration -MaxThreadsPerQueue 120 -Force"
  args:
    chdir: C:\

- name: Set SMB Server - Disable SMB1 Protocol
  win_command: >
    powershell.exe -ExecutionPolicy ByPass -Command "Set-SmbServerConfiguration -EnableSMB1Protocol $false -Force"
  args:
    chdir: C:\

# Proquest Settings
- name: Set SMB Server - MaxMpxCount (Proquest)
  win_command: >
    powershell.exe -ExecutionPolicy ByPass -Command "Set-SmbServerConfiguration -MaxMpxCount 2048 -Force"
  args:
    chdir: C:\

- name: Set SMB Server - MaxThreadsPerQueue (Proquest)
  win_command: >
    powershell.exe -ExecutionPolicy ByPass -Command "Set-SmbServerConfiguration -MaxThreadsPerQueue 288 -Force"
  args:
    chdir: C:\

- name: Set SMB Server - MaxWorkItems (Proquest)
  win_command: >
    powershell.exe -ExecutionPolicy ByPass -Command "Set-SmbServerConfiguration -MaxWorkItems 8192 -Force"
  args:
    chdir: C:\

- name: Create AQ-TEMP directory
  ansible.windows.win_file:
    path: D:\Data\AQ-TEMP
    state: directory
    
- name: Set permissions on Data directory
  ansible.windows.win_acl:
    path: D:\Data
    user: S-1-1-0 # Everyone
    rights: FullControl
    type: allow
    inherit: ContainerInherit,ObjectInherit
    propagation: None

- name: Ensure dbserver entry exists in Windows hosts file
  community.windows.win_lineinfile:
    path: C:\Windows\System32\drivers\etc\hosts
    line: "{{ airquest_defaults.db_server }} dbserver"
    state: present
    create: no
    backup: yes
