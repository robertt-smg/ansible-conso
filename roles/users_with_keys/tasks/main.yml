---
# Wrapper role to create users and set authorized_keys
- name: Craete authorized_keys_users_list
  set_fact: authorized_keys_users_list={{ users_list }}

- name: Prepare users_list for arillso.system.users (remove authorized_keys)
  set_fact:
    nw_users_list_for_arillso: >-
      {{
        users_list | map('dict2items')
                   | map('rejectattr', 'key', 'equalto', 'authorized_keys')
                   | map('items2dict')
                   | list
      }}

- name: Create users using arillso.system.users
  include_role:
    name: arillso.system.users
  vars:
    users_list: "{{ nw_users_list_for_arillso }}"

- name: Debug users_list before setting authorized_keys
  debug:
    var: authorized_keys_users_list

- name: Debug filtered users for authorized_keys
  debug:
    msg: "{{ authorized_keys_users_list | selectattr('authorized_keys', 'defined') | selectattr('authorized_keys', '!=', []) | list }}"

- name: Set authorized_keys for users
  authorized_key:
    user: "{{ item.0.username }}"
    key: "{{ item.1 }}"
    state: present
  with_subelements:
    - "{{ authorized_keys_users_list | selectattr('authorized_keys', 'defined') | selectattr('authorized_keys', '!=', []) | list }}"
    - authorized_keys

- name: Collect usernames for AllowUsers
  set_fact:
    allowusers_usernames: "{{ (allowusers_usernames | default([])) + [item.username] }}"
  loop: "{{ authorized_keys_users_list | selectattr('authorized_keys', 'defined') | selectattr('authorized_keys', '!=', []) | list }}"
  when: item.username is defined

- name: Ensure users are present in AllowUsers in sshd_config
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^AllowUsers'
    line: "AllowUsers Administrator {{ lookup('file', '/etc/ssh/sshd_config') | regex_search('^AllowUsers ?(.*)$', '\\1') | default('') }} {{ allowusers_usernames | join(' ') }}"
    backrefs: yes
    create: yes
  notify: restart sshd
